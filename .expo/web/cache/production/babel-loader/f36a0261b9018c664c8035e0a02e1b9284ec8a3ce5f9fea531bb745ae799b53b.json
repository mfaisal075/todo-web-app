{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _firestore=require(\"firebase/firestore\");var _NewSection=_interopRequireDefault(require(\"../components/NewSection\"));var _PendingSection=_interopRequireDefault(require(\"../components/PendingSection\"));var _CompletedSection=_interopRequireDefault(require(\"../components/CompletedSection\"));var _FirebaseConfig=require(\"../../FirebaseConfig\");var _DeleteSection=_interopRequireDefault(require(\"../components/DeleteSection\"));var _TaskCotext=require(\"../components/TaskCotext\");var _jsxRuntime=require(\"react/jsx-runtime\");function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var Home=function Home(){var _useState=(0,_react.useState)(false),_useState2=(0,_slicedToArray2.default)(_useState,2),modalVisible=_useState2[0],setModalVisible=_useState2[1];var _useState3=(0,_react.useState)(''),_useState4=(0,_slicedToArray2.default)(_useState3,2),task=_useState4[0],setTask=_useState4[1];var _useTaskContext=(0,_TaskCotext.useTaskContext)(),tasks=_useTaskContext.tasks,fetchTasks=_useTaskContext.fetchTasks;var _useState5=(0,_react.useState)(''),_useState6=(0,_slicedToArray2.default)(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var _useState7=(0,_react.useState)(new Date()),_useState8=(0,_slicedToArray2.default)(_useState7,2),dueDate=_useState8[0],setDueDate=_useState8[1];var _useState9=(0,_react.useState)(false),_useState10=(0,_slicedToArray2.default)(_useState9,2),isEditing=_useState10[0],setIsEditing=_useState10[1];var _useState11=(0,_react.useState)(null),_useState12=(0,_slicedToArray2.default)(_useState11,2),currentTaskId=_useState12[0],setCurrentTaskId=_useState12[1];var _useState13=(0,_react.useState)('All'),_useState14=(0,_slicedToArray2.default)(_useState13,2),selectedButton=_useState14[0],setSelectedButton=_useState14[1];var _useState15=(0,_react.useState)(false),_useState16=(0,_slicedToArray2.default)(_useState15,2),viewModalVisible=_useState16[0],setViewModalVisible=_useState16[1];var _useState17=(0,_react.useState)(null),_useState18=(0,_slicedToArray2.default)(_useState17,2),selectedTask=_useState18[0],setSelectedTask=_useState18[1];var _useTaskContext2=(0,_TaskCotext.useTaskContext)(),allTasksCount=_useTaskContext2.allTasksCount,newTasksCount=_useTaskContext2.newTasksCount,pendingTasksCount=_useTaskContext2.pendingTasksCount,completedTasksCount=_useTaskContext2.completedTasksCount,deletedTasksCount=_useTaskContext2.deletedTasksCount;var openModal=function openModal(){setModalVisible(true);};var closeModal=function closeModal(){setModalVisible(false);};var addTask=function(){var _ref=(0,_asyncToGenerator2.default)(function*(){if(task.trim()===''){_reactNative.Alert.alert('Task cannot be empty');return;}try{var formattedDueDate=dueDate.toISOString().split('T')[0];yield(0,_firestore.addDoc)((0,_firestore.collection)(_FirebaseConfig.FIRESTORE_DB,'tasks'),{taskName:task,taskDescription:description,dueDate:formattedDueDate,status:'To Do',createdAt:new Date().toISOString().split('T')[0]});console.log('Task added successfully');setTask('');setDescription('');setDueDate(new Date());closeModal();fetchTasks();}catch(error){console.error('Error adding task: ',error.message);_reactNative.Alert.alert('Error adding task:',error.message);}});return function addTask(){return _ref.apply(this,arguments);};}();var deleteTask=function(){var _ref2=(0,_asyncToGenerator2.default)(function*(taskId){try{var taskRef=(0,_firestore.doc)(_FirebaseConfig.FIRESTORE_DB,'tasks',taskId);yield(0,_firestore.deleteDoc)(taskRef);if(_reactNative.Platform.OS==='web'){window.alert('Task deleted successfully');}else{_reactNative.Alert.alert('Success','Task deleted successfully');}fetchTasks();}catch(error){console.error('Error deleting task: ',error.message);_reactNative.Alert.alert('Error deleting task:',error.message);}});return function deleteTask(_x){return _ref2.apply(this,arguments);};}();var updateTaskStatus=function(){var _ref3=(0,_asyncToGenerator2.default)(function*(taskId){try{var taskRef=(0,_firestore.doc)(_FirebaseConfig.FIRESTORE_DB,'tasks',taskId);yield(0,_firestore.updateDoc)(taskRef,{status:'Doing'});console.log('Task status updated to Doing');fetchTasks();}catch(error){console.error('Error updating task status: ',error.message);_reactNative.Alert.alert('Error updating task status:',error.message);}});return function updateTaskStatus(_x2){return _ref3.apply(this,arguments);};}();var updateTaskStatusDone=function(){var _ref4=(0,_asyncToGenerator2.default)(function*(taskId){try{var taskRef=(0,_firestore.doc)(_FirebaseConfig.FIRESTORE_DB,'tasks',taskId);yield(0,_firestore.updateDoc)(taskRef,{status:'Done'});console.log('Task status updated to Done');fetchTasks();}catch(error){console.error('Error updating task status: ',error.message);_reactNative.Alert.alert('Error updating task status:',error.message);}});return function updateTaskStatusDone(_x3){return _ref4.apply(this,arguments);};}();var updateTaskStatusToDo=function(){var _ref5=(0,_asyncToGenerator2.default)(function*(taskId){try{var taskRef=(0,_firestore.doc)(_FirebaseConfig.FIRESTORE_DB,'tasks',taskId);yield(0,_firestore.updateDoc)(taskRef,{status:'To Do'});console.log('Task status updated to To Do');fetchTasks();}catch(error){console.error('Error updating task status: ',error.message);_reactNative.Alert.alert('Error updating task status:',error.message);}});return function updateTaskStatusToDo(_x4){return _ref5.apply(this,arguments);};}();var updateTask=function(){var _ref6=(0,_asyncToGenerator2.default)(function*(){if(!currentTaskId)return;if(task.trim()===''){_reactNative.Alert.alert('Task cannot be empty');return;}try{var formattedDueDate=dueDate.toISOString().split('T')[0];var taskRef=(0,_firestore.doc)(_FirebaseConfig.FIRESTORE_DB,'tasks',currentTaskId);yield(0,_firestore.updateDoc)(taskRef,{taskName:task,taskDescription:description,dueDate:formattedDueDate});console.log('Task updated successfully');setTask('');setDescription('');setDueDate(new Date());closeModal();fetchTasks();}catch(error){console.error('Error updating task:',error.message);_reactNative.Alert.alert('Error updating task:',error.message);}});return function updateTask(){return _ref6.apply(this,arguments);};}();var openEditModal=function openEditModal(task){setTask(task.taskName);setDescription(task.taskDescription);setDueDate(new Date(task.dueDate));setCurrentTaskId(task.id);setIsEditing(true);setModalVisible(true);};var closeEditModal=function closeEditModal(){setTask('');setDescription('');setDueDate(new Date());setIsEditing(false);setModalVisible(false);};var handleButtonPress=function handleButtonPress(buttonName){setSelectedButton(buttonName);};var openViewModal=function openViewModal(task){setSelectedTask(task);setViewModalVisible(true);};var closeViewModal=function closeViewModal(){setSelectedTask(null);setViewModalVisible(false);};var todoTasks=tasks&&tasks.filter(function(task){return task.status==='To Do';});var doingTasks=tasks&&tasks.filter(function(task){return task.status==='Doing';});var doneTasks=tasks&&tasks.filter(function(task){return task.status==='Done';});return(0,_jsxRuntime.jsx)(_reactNative.View,{children:_reactNative.Platform.OS==='web'?(0,_jsxRuntime.jsx)(_reactNative.View,{children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:{flex:1,flexDirection:'row'},children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.sideBar,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sideBarHeading,children:\"Menu\"}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.sideBarButtonsSection,children:[(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{style:styles.sideBarButtons,onPress:function onPress(){handleButtonPress('All');openModal();},children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sideBarButtonsText,children:\"Add Task\"})}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:{height:5,backgroundColor:'white',marginTop:5,borderRadius:10}}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:{marginVertical:20},children:[(0,_jsxRuntime.jsxs)(_reactNative.TouchableOpacity,{style:[styles.sideBarButtons,selectedButton==='All'&&styles.selectedButton],onPress:function onPress(){return handleButtonPress('All');},children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sideBarButtonsText,children:\"All Tasks\"}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.notificationBadge,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.badgeText,children:allTasksCount})})]}),(0,_jsxRuntime.jsxs)(_reactNative.TouchableOpacity,{style:[styles.sideBarButtons,selectedButton==='New'&&styles.selectedButton],onPress:function onPress(){return handleButtonPress('New');},children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sideBarButtonsText,children:\"New Tasks\"}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.notificationBadge,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.badgeText,children:newTasksCount})})]}),(0,_jsxRuntime.jsxs)(_reactNative.TouchableOpacity,{style:[styles.sideBarButtons,selectedButton==='Pending'&&styles.selectedButton],onPress:function onPress(){return handleButtonPress('Pending');},children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sideBarButtonsText,children:\"Pending Tasks\"}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.notificationBadge,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.badgeText,children:pendingTasksCount})})]}),(0,_jsxRuntime.jsxs)(_reactNative.TouchableOpacity,{style:[styles.sideBarButtons,selectedButton==='Completed'&&styles.selectedButton],onPress:function onPress(){return handleButtonPress('Completed');},children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sideBarButtonsText,children:\"Completed Tasks\"}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.notificationBadge,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.badgeText,children:completedTasksCount})})]}),(0,_jsxRuntime.jsxs)(_reactNative.TouchableOpacity,{style:[styles.sideBarButtons,selectedButton==='Deleted'&&styles.selectedButton],onPress:function onPress(){return handleButtonPress('Deleted');},children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sideBarButtonsText,children:\"Deleted Tasks\"}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.notificationBadge,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.badgeText,children:deletedTasksCount})})]})]})]}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.signOutSec,children:(0,_jsxRuntime.jsxs)(_reactNative.TouchableOpacity,{style:{flexDirection:'row',alignItems:'center'},children:[(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/sign-out.png'),style:{width:30,height:30,tintColor:'#fff'}}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.signOutText,children:\"Sign Out\"})]})})]}),selectedButton==='All'&&(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.mainSection,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.mainSecHeading,children:\"Todos\"}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.secContainer,children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskSec,children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.taskSecHeadingContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.taskSecHeading,children:\"To do\"})}),(0,_jsxRuntime.jsx)(_reactNative.ScrollView,{style:styles.taskListContainer,showsVerticalScrollIndicator:false,children:todoTasks.length>0?todoTasks.map(function(task){return(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{onPress:function onPress(){return openViewModal(task);},children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskContainer,children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskInfo,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.taskName,children:task.taskName}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.dueDate,children:[(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.dueDateLabel,children:[\"Due Date:\",' ']}),task.dueDate]})]}),(0,_jsxRuntime.jsx)(_reactNative.View,{children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:{flexDirection:'row',alignItems:'center',justifyContent:'space-between'},children:[(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/left-arrow.png'),style:{width:25,height:25,tintColor:'#5CC8FF'}}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{onPress:function onPress(){return updateTaskStatus(task.id);},children:(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/right-arrow.png'),style:{width:25,height:25}})})]})})]},task.id)});}):(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.emptyMessageContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.emptyMessageText,children:\"No tasks available\"})})})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskSec,children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.taskSecHeadingContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.taskSecHeading,children:\"Doing\"})}),(0,_jsxRuntime.jsx)(_reactNative.ScrollView,{style:styles.taskListContainer,showsVerticalScrollIndicator:false,children:doingTasks.length>0?doingTasks.map(function(task){return(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{onPress:function onPress(){return openViewModal(task);},children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskContainer,children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskInfo,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.taskName,children:task.taskName}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.dueDate,children:[(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.dueDateLabel,children:[\"Due Date:\",' ']}),task.dueDate]})]}),(0,_jsxRuntime.jsx)(_reactNative.View,{children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:{flexDirection:'row',alignItems:'center',justifyContent:'space-between'},children:[(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{onPress:function onPress(){return updateTaskStatusToDo(task.id);},children:(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/left-arrow.png'),style:{width:25,height:25}})}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:{width:20}}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{onPress:function onPress(){return updateTaskStatusDone(task.id);},children:(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/right-arrow.png'),style:{width:25,height:25}})})]})})]},task.id)});}):(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.emptyMessageContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.emptyMessageText,children:\"No tasks available\"})})})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskSec,children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.taskSecHeadingContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.taskSecHeading,children:\"Done\"})}),(0,_jsxRuntime.jsx)(_reactNative.ScrollView,{style:styles.taskListContainer,showsVerticalScrollIndicator:false,children:doneTasks.length>0?doneTasks.map(function(task){return(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{onPress:function onPress(){return openViewModal(task);},children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskContainer,children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.taskInfo,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.taskName,children:task.taskName}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.dueDate,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.dueDateLabel,children:\"Task Completed\"})})]}),(0,_jsxRuntime.jsx)(_reactNative.View,{children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:{flexDirection:'row',alignItems:'center',justifyContent:'space-between'},children:[(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/left-arrow.png'),style:{width:25,height:25,tintColor:'#5CC8FF'}}),(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/check.png'),style:{width:25,height:25}})]})})]},task.id)});}):(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.emptyMessageContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.emptyMessageText,children:\"No tasks available\"})})})]})]})]}),selectedButton==='New'&&(0,_jsxRuntime.jsx)(_NewSection.default,{}),selectedButton==='Pending'&&(0,_jsxRuntime.jsx)(_PendingSection.default,{}),selectedButton==='Completed'&&(0,_jsxRuntime.jsx)(_CompletedSection.default,{}),selectedButton==='Deleted'&&(0,_jsxRuntime.jsx)(_DeleteSection.default,{}),(0,_jsxRuntime.jsx)(_reactNative.Modal,{visible:modalVisible,transparent:true,animationType:\"slide\",children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.modalContainer,children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.modalView,children:[(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{onPress:closeModal,style:styles.closeButton,children:(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/cross-mark.png'),style:{width:25,height:25,tintColor:'black'}})}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.modalTitle,children:\"Add New Task\"}),(0,_jsxRuntime.jsx)(_reactNative.TextInput,{style:styles.modalTextInput,placeholder:\"Enter Task\",value:task,onChangeText:function onChangeText(text){return setTask(text);}}),(0,_jsxRuntime.jsx)(_reactNative.TextInput,{style:styles.modalTextInput,placeholder:\"Description\",value:description,onChangeText:function onChangeText(text){return setDescription(text);}}),(0,_jsxRuntime.jsx)(_reactNative.Text,{children:\"Enter Due Date:\"}),(0,_jsxRuntime.jsx)(\"input\",{style:styles.modalTextInput,type:\"date\",value:dueDate.toISOString().substr(0,10),onChange:function onChange(e){return setDueDate(new Date(e.target.value));}}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.modalButtonContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Button,{title:\"Add Task\",onPress:function onPress(){addTask();}})})]})})}),(0,_jsxRuntime.jsx)(_reactNative.Modal,{visible:modalVisible,transparent:true,animationType:\"slide\",children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.modalContainer,children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.modalView,children:[(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{onPress:closeEditModal,style:styles.closeButton,children:(0,_jsxRuntime.jsx)(_reactNative.Image,{source:require('../assets/cross-mark.png'),style:{width:25,height:25,tintColor:'black'}})}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.modalTitle,children:isEditing?'Edit Task':'Add New Task'}),(0,_jsxRuntime.jsx)(_reactNative.TextInput,{style:styles.modalTextInput,placeholder:\"Enter Task\",value:task,onChangeText:function onChangeText(text){return setTask(text);}}),(0,_jsxRuntime.jsx)(_reactNative.TextInput,{style:styles.modalTextInput,placeholder:\"Description\",value:description,onChangeText:function onChangeText(text){return setDescription(text);}}),(0,_jsxRuntime.jsx)(_reactNative.Text,{children:\"Enter Due Date:\"}),(0,_jsxRuntime.jsx)(\"input\",{style:styles.modalTextInput,type:\"date\",value:dueDate.toISOString().substr(0,10),onChange:function onChange(e){return setDueDate(new Date(e.target.value));}}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.modalButtonContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Button,{title:isEditing?'Update Task':'Add Task',onPress:isEditing?updateTask:addTask})})]})})}),(0,_jsxRuntime.jsx)(_reactNative.Modal,{animationType:\"slide\",transparent:true,visible:viewModalVisible,onRequestClose:closeViewModal,children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.modalBackground,children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.viewModalContainer,children:selectedTask&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.viewModalTitle,children:selectedTask.taskName}),(0,_jsxRuntime.jsxs)(_reactNative.ScrollView,{children:[(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.modalText,children:[(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.viewModalLabel,children:[\"Description:\",' ']}),selectedTask.taskDescription]}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.modalText,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.viewModalLabel,children:\"Status: \"}),selectedTask.status]}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.modalText,children:[(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.viewModalLabel,children:[\"Created At:\",' ']}),new Date(selectedTask.createdAt).toLocaleString()]}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.modalText,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.viewModalLabel,children:\"Due Date: \"}),new Date(selectedTask.dueDate).toLocaleDateString()]})]}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{style:styles.viewCloseButton,onPress:closeViewModal,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.closeButtonText,children:\"Close\"})})]})})})})]})}):(0,_jsxRuntime.jsx)(_reactNative.Text,{children:\"Hello Android\"})});};var _default=exports.default=Home;var styles=_reactNative.StyleSheet.create({sideBar:{width:'20%',height:550,backgroundColor:'#474A45',marginVertical:20,marginHorizontal:20,borderRadius:10},sideBarHeading:{color:'#5CC8FF',fontSize:24,fontWeight:'600',marginVertical:10,marginHorizontal:10},sideBarButtonsSection:{marginVertical:5,marginHorizontal:20},sideBarButtons:{backgroundColor:'#848881',padding:10,marginVertical:8,borderRadius:10},sideBarButtonsText:{color:'#fff',fontSize:16,fontWeight:'600'},signOutSec:{position:'absolute',bottom:20,left:20,flexDirection:'row',alignItems:'center'},signOutText:{color:'#fff',fontSize:16,fontWeight:'600',marginLeft:10},selectedButton:{backgroundColor:'#5CC8FF'},mainSection:{width:'75%',marginVertical:30,marginHorizontal:10},mainSecHeading:{fontSize:28,fontWeight:'600',color:'#93867F'},secContainer:{flexDirection:'row',width:'100%',justifyContent:'space-between'},taskSec:{width:'30%',height:500,backgroundColor:'#D6D7D5',borderRadius:10,marginTop:5},taskSecHeadingContainer:{height:60,justifyContent:'center',alignItems:'center',borderBottomColor:'#93867F',borderBottomWidth:2},taskSecHeading:{fontSize:24,fontWeight:'600',color:'#474A45'},modalContainer:{flex:1,justifyContent:'center',alignItems:'center',backgroundColor:'rgba(0,0,0,0.5)'},modalView:{width:600,height:400,padding:20,backgroundColor:'#fff',borderRadius:10,position:'relative'},closeButton:{position:'absolute',top:5,right:5},modalTitle:{fontSize:20,fontWeight:'600',marginBottom:10,textAlign:'center'},modalTextInput:{height:40,borderColor:'#474A45',borderWidth:1,marginBottom:20,paddingHorizontal:10,borderRadius:5},modalButtonContainer:{position:'absolute',bottom:20,width:'94%',justifyContent:'center'},taskContainer:{padding:15,borderRadius:10,borderBottomColor:'#474A45',borderBottomWidth:1,flexDirection:'row',justifyContent:'space-between',alignItems:'center',marginVertical:5,backgroundColor:'#5CC8FF'},deleteButton:{marginLeft:10},taskInfo:{flex:1},taskName:{fontSize:16,fontWeight:'600',color:'black'},dueDate:{fontSize:10,fontWeight:'600',color:'#474A45'},dueDateLabel:{fontSize:12,fontWeight:'600',color:'#474A45'},taskListContainer:{padding:10},modalLabel:{fontSize:16,fontWeight:'600',marginBottom:5},notificationBadge:{position:'absolute',right:10,backgroundColor:'red',borderRadius:10,width:20,height:20,justifyContent:'center',alignItems:'center'},badgeText:{color:'white',fontSize:12,fontWeight:'bold'},modalBackground:{flex:1,backgroundColor:'rgba(0, 0, 0, 0.5)',justifyContent:'center',alignItems:'center'},viewModalContainer:{width:'40%',padding:20,backgroundColor:'#FFF',borderRadius:10,shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:4,elevation:5},viewModalTitle:{fontSize:24,fontWeight:'bold',marginBottom:15,color:'#5CC8FF'},modalText:{fontSize:16,marginBottom:10},viewModalLabel:{fontWeight:'bold'},viewCloseButton:{marginTop:20,backgroundColor:'#474A45',padding:10,borderRadius:5,alignItems:'center'},closeButtonText:{color:'#5CC8FF',fontSize:16,fontWeight:'bold'},emptyMessageContainer:{justifyContent:'center',alignItems:'center',paddingVertical:20},emptyMessageText:{fontSize:18,color:'#474A45'}});","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_firestore","_NewSection","_interopRequireDefault","_PendingSection","_CompletedSection","_FirebaseConfig","_DeleteSection","_TaskCotext","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","Home","_useState","useState","_useState2","_slicedToArray2","modalVisible","setModalVisible","_useState3","_useState4","task","setTask","_useTaskContext","useTaskContext","tasks","fetchTasks","_useState5","_useState6","description","setDescription","_useState7","Date","_useState8","dueDate","setDueDate","_useState9","_useState10","isEditing","setIsEditing","_useState11","_useState12","currentTaskId","setCurrentTaskId","_useState13","_useState14","selectedButton","setSelectedButton","_useState15","_useState16","viewModalVisible","setViewModalVisible","_useState17","_useState18","selectedTask","setSelectedTask","_useTaskContext2","allTasksCount","newTasksCount","pendingTasksCount","completedTasksCount","deletedTasksCount","openModal","closeModal","addTask","_ref","_asyncToGenerator2","trim","Alert","alert","formattedDueDate","toISOString","split","addDoc","collection","FIRESTORE_DB","taskName","taskDescription","status","createdAt","console","log","error","message","apply","arguments","deleteTask","_ref2","taskId","taskRef","doc","deleteDoc","Platform","OS","window","_x","updateTaskStatus","_ref3","updateDoc","_x2","updateTaskStatusDone","_ref4","_x3","updateTaskStatusToDo","_ref5","_x4","updateTask","_ref6","openEditModal","id","closeEditModal","handleButtonPress","buttonName","openViewModal","closeViewModal","todoTasks","filter","doingTasks","doneTasks","jsx","View","children","jsxs","style","flex","flexDirection","styles","sideBar","Text","sideBarHeading","sideBarButtonsSection","TouchableOpacity","sideBarButtons","onPress","sideBarButtonsText","height","backgroundColor","marginTop","borderRadius","marginVertical","notificationBadge","badgeText","signOutSec","alignItems","Image","source","width","tintColor","signOutText","mainSection","mainSecHeading","secContainer","taskSec","taskSecHeadingContainer","taskSecHeading","ScrollView","taskListContainer","showsVerticalScrollIndicator","length","map","taskContainer","taskInfo","dueDateLabel","justifyContent","emptyMessageContainer","emptyMessageText","Modal","visible","transparent","animationType","modalContainer","modalView","closeButton","modalTitle","TextInput","modalTextInput","placeholder","value","onChangeText","text","type","substr","onChange","target","modalButtonContainer","Button","title","onRequestClose","modalBackground","viewModalContainer","Fragment","viewModalTitle","modalText","viewModalLabel","toLocaleString","toLocaleDateString","viewCloseButton","closeButtonText","_default","exports","StyleSheet","create","marginHorizontal","color","fontSize","fontWeight","padding","position","bottom","left","marginLeft","borderBottomColor","borderBottomWidth","top","right","marginBottom","textAlign","borderColor","borderWidth","paddingHorizontal","deleteButton","modalLabel","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","paddingVertical"],"sources":["C:/Users/Mian/Desktop/app/TodoWebApp/src/screens/Home.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Platform,\r\n  StyleSheet,\r\n  Alert,\r\n  Button,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n  Modal,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport {\r\n  addDoc,\r\n  getDocs,\r\n  collection,\r\n  updateDoc,\r\n  doc,\r\n  deleteDoc,\r\n} from 'firebase/firestore';\r\nimport NewSection from '../components/NewSection';\r\nimport PendingSection from '../components/PendingSection';\r\nimport CompletedSection from '../components/CompletedSection';\r\nimport {Task} from '../components/TaskIterface';\r\nimport {FIRESTORE_DB} from '../../FirebaseConfig';\r\nimport DeleteSection from '../components/DeleteSection';\r\nimport {TaskProvider} from '../components/TaskCotext';\r\nimport {useTaskContext} from '../components/TaskCotext';\r\n\r\nconst Home = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [task, setTask] = useState(''); // Task input\r\n  const {tasks, fetchTasks} = useTaskContext();\r\n  const [description, setDescription] = useState(''); // Task description\r\n  const [dueDate, setDueDate] = useState(new Date()); // Task due date\r\n  const [isEditing, setIsEditing] = useState(false); // To track if we are editing\r\n  const [currentTaskId, setCurrentTaskId] = useState<string | null>(null);\r\n  const [selectedButton, setSelectedButton] = useState<string>('All');\r\n  const [viewModalVisible, setViewModalVisible] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\r\n\r\n  const {\r\n    allTasksCount,\r\n    newTasksCount,\r\n    pendingTasksCount,\r\n    completedTasksCount,\r\n    deletedTasksCount,\r\n  } = useTaskContext();\r\n\r\n  const openModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const addTask = async () => {\r\n    if (task.trim() === '') {\r\n      Alert.alert('Task cannot be empty');\r\n      return;\r\n    }\r\n    try {\r\n      const formattedDueDate = dueDate.toISOString().split('T')[0];\r\n\r\n      await addDoc(collection(FIRESTORE_DB, 'tasks'), {\r\n        taskName: task, // Correct field name\r\n        taskDescription: description,\r\n        dueDate: formattedDueDate,\r\n        status: 'To Do',\r\n        createdAt: new Date().toISOString().split('T')[0],\r\n      });\r\n      console.log('Task added successfully');\r\n      setTask(''); // Clear input\r\n      setDescription(''); // Clear input\r\n      setDueDate(new Date()); // Reset due date\r\n      closeModal(); // Close modal after adding task\r\n      fetchTasks(); // Refresh task list\r\n    } catch (error: any) {\r\n      console.error('Error adding task: ', error.message); // Log error message\r\n      Alert.alert('Error adding task:', error.message);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (taskId: string) => {\r\n    try {\r\n      const taskRef = doc(FIRESTORE_DB, 'tasks', taskId);\r\n      await deleteDoc(taskRef);\r\n\r\n      if (Platform.OS === 'web') {\r\n        window.alert('Task deleted successfully');\r\n      } else {\r\n        Alert.alert('Success', 'Task deleted successfully');\r\n      }\r\n\r\n      fetchTasks();\r\n    } catch (error: any) {\r\n      console.error('Error deleting task: ', error.message);\r\n      Alert.alert('Error deleting task:', error.message);\r\n    }\r\n  };\r\n\r\n  //Function to update task status to 'Doing'\r\n  const updateTaskStatus = async (taskId: string) => {\r\n    try {\r\n      const taskRef = doc(FIRESTORE_DB, 'tasks', taskId);\r\n      await updateDoc(taskRef, {\r\n        status: 'Doing',\r\n      });\r\n      console.log('Task status updated to Doing');\r\n      fetchTasks();\r\n    } catch (error: any) {\r\n      console.error('Error updating task status: ', error.message);\r\n      Alert.alert('Error updating task status:', error.message);\r\n    }\r\n  };\r\n\r\n  //Function to update task status to 'Done'\r\n  const updateTaskStatusDone = async (taskId: string) => {\r\n    try {\r\n      const taskRef = doc(FIRESTORE_DB, 'tasks', taskId);\r\n      await updateDoc(taskRef, {\r\n        status: 'Done',\r\n      });\r\n      console.log('Task status updated to Done');\r\n      fetchTasks();\r\n    } catch (error: any) {\r\n      console.error('Error updating task status: ', error.message);\r\n      Alert.alert('Error updating task status:', error.message);\r\n    }\r\n  };\r\n\r\n  //Function to update task status to 'To Do'\r\n  const updateTaskStatusToDo = async (taskId: string) => {\r\n    try {\r\n      const taskRef = doc(FIRESTORE_DB, 'tasks', taskId);\r\n      await updateDoc(taskRef, {\r\n        status: 'To Do',\r\n      });\r\n      console.log('Task status updated to To Do');\r\n      fetchTasks();\r\n    } catch (error: any) {\r\n      console.error('Error updating task status: ', error.message);\r\n      Alert.alert('Error updating task status:', error.message);\r\n    }\r\n  };\r\n\r\n  //Function to update task\r\n  const updateTask = async () => {\r\n    if (!currentTaskId) return;\r\n\r\n    if (task.trim() === '') {\r\n      Alert.alert('Task cannot be empty');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formattedDueDate = dueDate.toISOString().split('T')[0];\r\n\r\n      const taskRef = doc(FIRESTORE_DB, 'tasks', currentTaskId);\r\n      await updateDoc(taskRef, {\r\n        taskName: task, // Updated task name\r\n        taskDescription: description, // Updated description\r\n        dueDate: formattedDueDate, // Updated due date\r\n      });\r\n      console.log('Task updated successfully');\r\n\r\n      setTask(''); // Clear inputs\r\n      setDescription('');\r\n      setDueDate(new Date());\r\n      closeModal(); // Close the modal\r\n      fetchTasks(); // Refresh task list\r\n    } catch (error: any) {\r\n      console.error('Error updating task:', error.message);\r\n      Alert.alert('Error updating task:', error.message);\r\n    }\r\n  };\r\n\r\n  const openEditModal = (task: Task) => {\r\n    setTask(task.taskName); // Populate task name\r\n    setDescription(task.taskDescription); // Populate description\r\n    setDueDate(new Date(task.dueDate)); // Populate due date\r\n    setCurrentTaskId(task.id); // Set the task ID\r\n    setIsEditing(true); // Enable edit mode\r\n    setModalVisible(true); // Open the modal\r\n  };\r\n\r\n  const closeEditModal = () => {\r\n    setTask(''); // Clear inputs\r\n    setDescription('');\r\n    setDueDate(new Date());\r\n    setIsEditing(false); // Disable edit mode\r\n    setModalVisible(false); // Close the modal\r\n  };\r\n\r\n  // Function to handle button selection\r\n  const handleButtonPress = (buttonName: string) => {\r\n    setSelectedButton(buttonName);\r\n  };\r\n\r\n  const openViewModal = (task: Task) => {\r\n    setSelectedTask(task);\r\n    setViewModalVisible(true);\r\n  };\r\n\r\n  const closeViewModal = () => {\r\n    setSelectedTask(null);\r\n    setViewModalVisible(false);\r\n  };\r\n\r\n  const todoTasks = tasks && tasks.filter(task => task.status === 'To Do');\r\n  const doingTasks = tasks && tasks.filter(task => task.status === 'Doing');\r\n  const doneTasks = tasks && tasks.filter(task => task.status === 'Done');\r\n\r\n  return (\r\n    <View>\r\n      {Platform.OS === 'web' ? (\r\n        <View>\r\n          <View style={{flex: 1, flexDirection: 'row'}}>\r\n            <View style={styles.sideBar}>\r\n              <Text style={styles.sideBarHeading}>Menu</Text>\r\n              <View style={styles.sideBarButtonsSection}>\r\n                <TouchableOpacity\r\n                  style={styles.sideBarButtons}\r\n                  onPress={() => {\r\n                    handleButtonPress('All');\r\n                    openModal();\r\n                  }}>\r\n                  <Text style={styles.sideBarButtonsText}>Add Task</Text>\r\n                </TouchableOpacity>\r\n\r\n                {/* Add a divider */}\r\n                <View\r\n                  style={{\r\n                    height: 5,\r\n                    backgroundColor: 'white',\r\n                    marginTop: 5,\r\n                    borderRadius: 10,\r\n                  }}></View>\r\n\r\n                <View style={{marginVertical: 20}}>\r\n                  {/* All Tasks Button */}\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      styles.sideBarButtons,\r\n                      selectedButton === 'All' && styles.selectedButton,\r\n                    ]}\r\n                    onPress={() => handleButtonPress('All')}>\r\n                    <Text style={styles.sideBarButtonsText}>All Tasks</Text>\r\n                    <View style={styles.notificationBadge}>\r\n                      <Text style={styles.badgeText}>{allTasksCount}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n\r\n                  {/* New Tasks Button */}\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      styles.sideBarButtons,\r\n                      selectedButton === 'New' && styles.selectedButton,\r\n                    ]}\r\n                    onPress={() => handleButtonPress('New')}>\r\n                    <Text style={styles.sideBarButtonsText}>New Tasks</Text>\r\n                    <View style={styles.notificationBadge}>\r\n                      <Text style={styles.badgeText}>{newTasksCount}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n\r\n                  {/* Pending Tasks Button */}\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      styles.sideBarButtons,\r\n                      selectedButton === 'Pending' && styles.selectedButton,\r\n                    ]}\r\n                    onPress={() => handleButtonPress('Pending')}>\r\n                    <Text style={styles.sideBarButtonsText}>Pending Tasks</Text>\r\n                    <View style={styles.notificationBadge}>\r\n                      <Text style={styles.badgeText}>{pendingTasksCount}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n\r\n                  {/* Completed Tasks Button */}\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      styles.sideBarButtons,\r\n                      selectedButton === 'Completed' && styles.selectedButton,\r\n                    ]}\r\n                    onPress={() => handleButtonPress('Completed')}>\r\n                    <Text style={styles.sideBarButtonsText}>\r\n                      Completed Tasks\r\n                    </Text>\r\n                    <View style={styles.notificationBadge}>\r\n                      <Text style={styles.badgeText}>\r\n                        {completedTasksCount}\r\n                      </Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n\r\n                  {/* Deleted Tasks Button */}\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      styles.sideBarButtons,\r\n                      selectedButton === 'Deleted' && styles.selectedButton,\r\n                    ]}\r\n                    onPress={() => handleButtonPress('Deleted')}>\r\n                    <Text style={styles.sideBarButtonsText}>Deleted Tasks</Text>\r\n                    <View style={styles.notificationBadge}>\r\n                      <Text style={styles.badgeText}>{deletedTasksCount}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View style={styles.signOutSec}>\r\n                <TouchableOpacity\r\n                  style={{flexDirection: 'row', alignItems: 'center'}}>\r\n                  <Image\r\n                    source={require('../assets/sign-out.png')}\r\n                    style={{width: 30, height: 30, tintColor: '#fff'}}\r\n                  />\r\n                  <Text style={styles.signOutText}>Sign Out</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n            {selectedButton === 'All' && (\r\n              <View style={styles.mainSection}>\r\n                <Text style={styles.mainSecHeading}>Todos</Text>\r\n\r\n                <View style={styles.secContainer}>\r\n                  <View style={styles.taskSec}>\r\n                    <View style={styles.taskSecHeadingContainer}>\r\n                      <Text style={styles.taskSecHeading}>To do</Text>\r\n                    </View>\r\n                    <ScrollView\r\n                      style={styles.taskListContainer}\r\n                      showsVerticalScrollIndicator={false}>\r\n                      {todoTasks.length > 0 ? (\r\n                        todoTasks.map((task: Task) => (\r\n                          <TouchableOpacity onPress={() => openViewModal(task)}>\r\n                            <View key={task.id} style={styles.taskContainer}>\r\n                              <View style={styles.taskInfo}>\r\n                                <Text style={styles.taskName}>\r\n                                  {task.taskName}\r\n                                </Text>\r\n                                <Text style={styles.dueDate}>\r\n                                  <Text style={styles.dueDateLabel}>\r\n                                    Due Date:{' '}\r\n                                  </Text>\r\n                                  {task.dueDate}\r\n                                </Text>\r\n                              </View>\r\n                              <View>\r\n                                <View\r\n                                  style={{\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'space-between',\r\n                                  }}>\r\n                                  <Image\r\n                                    source={require('../assets/left-arrow.png')}\r\n                                    style={{\r\n                                      width: 25,\r\n                                      height: 25,\r\n                                      tintColor: '#5CC8FF',\r\n                                    }}\r\n                                  />\r\n                                  <TouchableOpacity\r\n                                    onPress={() => updateTaskStatus(task.id)}>\r\n                                    <Image\r\n                                      source={require('../assets/right-arrow.png')}\r\n                                      style={{width: 25, height: 25}}\r\n                                    />\r\n                                  </TouchableOpacity>\r\n                                </View>\r\n                              </View>\r\n                            </View>\r\n                          </TouchableOpacity>\r\n                        ))\r\n                      ) : (\r\n                        <View style={styles.emptyMessageContainer}>\r\n                          <Text style={styles.emptyMessageText}>\r\n                            No tasks available\r\n                          </Text>\r\n                        </View>\r\n                      )}\r\n                    </ScrollView>\r\n                  </View>\r\n\r\n                  <View style={styles.taskSec}>\r\n                    <View style={styles.taskSecHeadingContainer}>\r\n                      <Text style={styles.taskSecHeading}>Doing</Text>\r\n                    </View>\r\n                    <ScrollView\r\n                      style={styles.taskListContainer}\r\n                      showsVerticalScrollIndicator={false}>\r\n                      {doingTasks.length > 0 ? (\r\n                        doingTasks.map((task: Task) => (\r\n                          <TouchableOpacity onPress={() => openViewModal(task)}>\r\n                            <View key={task.id} style={styles.taskContainer}>\r\n                              <View style={styles.taskInfo}>\r\n                                <Text style={styles.taskName}>\r\n                                  {task.taskName}\r\n                                </Text>\r\n                                <Text style={styles.dueDate}>\r\n                                  <Text style={styles.dueDateLabel}>\r\n                                    Due Date:{' '}\r\n                                  </Text>\r\n                                  {task.dueDate}\r\n                                </Text>\r\n                              </View>\r\n                              <View>\r\n                                <View\r\n                                  style={{\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'space-between',\r\n                                  }}>\r\n                                  <TouchableOpacity\r\n                                    onPress={() =>\r\n                                      updateTaskStatusToDo(task.id)\r\n                                    }>\r\n                                    <Image\r\n                                      source={require('../assets/left-arrow.png')}\r\n                                      style={{\r\n                                        width: 25,\r\n                                        height: 25,\r\n                                      }}\r\n                                    />\r\n                                  </TouchableOpacity>\r\n                                  <View style={{width: 20}} />\r\n                                  <TouchableOpacity\r\n                                    onPress={() =>\r\n                                      updateTaskStatusDone(task.id)\r\n                                    }>\r\n                                    <Image\r\n                                      source={require('../assets/right-arrow.png')}\r\n                                      style={{width: 25, height: 25}}\r\n                                    />\r\n                                  </TouchableOpacity>\r\n                                </View>\r\n                              </View>\r\n                            </View>\r\n                          </TouchableOpacity>\r\n                        ))\r\n                      ) : (\r\n                        <View style={styles.emptyMessageContainer}>\r\n                          <Text style={styles.emptyMessageText}>\r\n                            No tasks available\r\n                          </Text>\r\n                        </View>\r\n                      )}\r\n                    </ScrollView>\r\n                  </View>\r\n                  <View style={styles.taskSec}>\r\n                    <View style={styles.taskSecHeadingContainer}>\r\n                      <Text style={styles.taskSecHeading}>Done</Text>\r\n                    </View>\r\n                    <ScrollView\r\n                      style={styles.taskListContainer}\r\n                      showsVerticalScrollIndicator={false}>\r\n                      {doneTasks.length > 0 ? (\r\n                        doneTasks.map((task: Task) => (\r\n                          <TouchableOpacity onPress={() => openViewModal(task)}>\r\n                            <View key={task.id} style={styles.taskContainer}>\r\n                              <View style={styles.taskInfo}>\r\n                                <Text style={styles.taskName}>\r\n                                  {task.taskName}\r\n                                </Text>\r\n                                <Text style={styles.dueDate}>\r\n                                  <Text style={styles.dueDateLabel}>\r\n                                    Task Completed\r\n                                  </Text>\r\n                                </Text>\r\n                              </View>\r\n                              <View>\r\n                                <View\r\n                                  style={{\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'space-between',\r\n                                  }}>\r\n                                  <Image\r\n                                    source={require('../assets/left-arrow.png')}\r\n                                    style={{\r\n                                      width: 25,\r\n                                      height: 25,\r\n                                      tintColor: '#5CC8FF',\r\n                                    }}\r\n                                  />\r\n                                  <Image\r\n                                    source={require('../assets/check.png')}\r\n                                    style={{width: 25, height: 25}}\r\n                                  />\r\n                                </View>\r\n                              </View>\r\n                            </View>\r\n                          </TouchableOpacity>\r\n                        ))\r\n                      ) : (\r\n                        <View style={styles.emptyMessageContainer}>\r\n                          <Text style={styles.emptyMessageText}>\r\n                            No tasks available\r\n                          </Text>\r\n                        </View>\r\n                      )}\r\n                    </ScrollView>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            )}\r\n            {selectedButton === 'New' && <NewSection />}\r\n            {selectedButton === 'Pending' && <PendingSection />}\r\n            {selectedButton === 'Completed' && <CompletedSection />}\r\n            {selectedButton === 'Deleted' && <DeleteSection />}\r\n\r\n            {/* Add Modal Section */}\r\n\r\n            <Modal\r\n              visible={modalVisible}\r\n              transparent={true}\r\n              animationType=\"slide\">\r\n              <View style={styles.modalContainer}>\r\n                <View style={styles.modalView}>\r\n                  <TouchableOpacity\r\n                    onPress={closeModal}\r\n                    style={styles.closeButton}>\r\n                    <Image\r\n                      source={require('../assets/cross-mark.png')}\r\n                      style={{width: 25, height: 25, tintColor: 'black'}}\r\n                    />\r\n                  </TouchableOpacity>\r\n                  <Text style={styles.modalTitle}>Add New Task</Text>\r\n                  <TextInput\r\n                    style={styles.modalTextInput}\r\n                    placeholder=\"Enter Task\"\r\n                    value={task} // Bind the input to state\r\n                    onChangeText={text => setTask(text)} // Update state on change\r\n                  />\r\n                  <TextInput\r\n                    style={styles.modalTextInput}\r\n                    placeholder=\"Description\"\r\n                    value={description} // Bind the input to state\r\n                    onChangeText={text => setDescription(text)} // Update state on change\r\n                  />\r\n                  <Text>Enter Due Date:</Text>\r\n                  <input\r\n                    style={styles.modalTextInput}\r\n                    type=\"date\"\r\n                    value={dueDate.toISOString().substr(0, 10)} // Format to 'YYYY-MM-DD'\r\n                    onChange={e => setDueDate(new Date(e.target.value))}\r\n                  />\r\n                  <View style={styles.modalButtonContainer}>\r\n                    <Button\r\n                      title=\"Add Task\"\r\n                      onPress={() => {\r\n                        addTask();\r\n                      }}\r\n                    />\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Edit Modal Section */}\r\n\r\n            <Modal\r\n              visible={modalVisible}\r\n              transparent={true}\r\n              animationType=\"slide\">\r\n              <View style={styles.modalContainer}>\r\n                <View style={styles.modalView}>\r\n                  <TouchableOpacity\r\n                    onPress={closeEditModal}\r\n                    style={styles.closeButton}>\r\n                    <Image\r\n                      source={require('../assets/cross-mark.png')}\r\n                      style={{width: 25, height: 25, tintColor: 'black'}}\r\n                    />\r\n                  </TouchableOpacity>\r\n                  <Text style={styles.modalTitle}>\r\n                    {isEditing ? 'Edit Task' : 'Add New Task'}\r\n                  </Text>\r\n\r\n                  <TextInput\r\n                    style={styles.modalTextInput}\r\n                    placeholder=\"Enter Task\"\r\n                    value={task}\r\n                    onChangeText={text => setTask(text)}\r\n                  />\r\n                  <TextInput\r\n                    style={styles.modalTextInput}\r\n                    placeholder=\"Description\"\r\n                    value={description}\r\n                    onChangeText={text => setDescription(text)}\r\n                  />\r\n                  <Text>Enter Due Date:</Text>\r\n                  <input\r\n                    style={styles.modalTextInput}\r\n                    type=\"date\"\r\n                    value={dueDate.toISOString().substr(0, 10)}\r\n                    onChange={e => setDueDate(new Date(e.target.value))}\r\n                  />\r\n\r\n                  <View style={styles.modalButtonContainer}>\r\n                    <Button\r\n                      title={isEditing ? 'Update Task' : 'Add Task'}\r\n                      onPress={isEditing ? updateTask : addTask}\r\n                    />\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n\r\n            {/* Modal for viewing task details */}\r\n            <Modal\r\n              animationType=\"slide\"\r\n              transparent={true}\r\n              visible={viewModalVisible}\r\n              onRequestClose={closeViewModal}>\r\n              <View style={styles.modalBackground}>\r\n                <View style={styles.viewModalContainer}>\r\n                  {selectedTask && (\r\n                    <>\r\n                      <Text style={styles.viewModalTitle}>\r\n                        {selectedTask.taskName}\r\n                      </Text>\r\n                      <ScrollView>\r\n                        <Text style={styles.modalText}>\r\n                          <Text style={styles.viewModalLabel}>\r\n                            Description:{' '}\r\n                          </Text>\r\n                          {selectedTask.taskDescription}\r\n                        </Text>\r\n                        <Text style={styles.modalText}>\r\n                          <Text style={styles.viewModalLabel}>Status: </Text>\r\n                          {selectedTask.status}\r\n                        </Text>\r\n                        <Text style={styles.modalText}>\r\n                          <Text style={styles.viewModalLabel}>\r\n                            Created At:{' '}\r\n                          </Text>\r\n                          {new Date(selectedTask.createdAt).toLocaleString()}\r\n                        </Text>\r\n                        <Text style={styles.modalText}>\r\n                          <Text style={styles.viewModalLabel}>Due Date: </Text>\r\n                          {new Date(selectedTask.dueDate).toLocaleDateString()}\r\n                        </Text>\r\n                      </ScrollView>\r\n                      <TouchableOpacity\r\n                        style={styles.viewCloseButton}\r\n                        onPress={closeViewModal}>\r\n                        <Text style={styles.closeButtonText}>Close</Text>\r\n                      </TouchableOpacity>\r\n                    </>\r\n                  )}\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <Text>Hello Android</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst styles = StyleSheet.create({\r\n  // SideBar styles\r\n  sideBar: {\r\n    width: '20%',\r\n    height: 550,\r\n    backgroundColor: '#474A45',\r\n    marginVertical: 20,\r\n    marginHorizontal: 20,\r\n    borderRadius: 10,\r\n  },\r\n  sideBarHeading: {\r\n    color: '#5CC8FF',\r\n    fontSize: 24,\r\n    fontWeight: '600',\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n  },\r\n  sideBarButtonsSection: {\r\n    marginVertical: 5,\r\n    marginHorizontal: 20,\r\n  },\r\n  sideBarButtons: {\r\n    backgroundColor: '#848881',\r\n    padding: 10,\r\n    marginVertical: 8,\r\n    borderRadius: 10,\r\n  },\r\n  sideBarButtonsText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  signOutSec: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    left: 20,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  signOutText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    marginLeft: 10,\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: '#5CC8FF', // Color for selected button\r\n  },\r\n\r\n  // Main Section\r\n  mainSection: {\r\n    width: '75%',\r\n    marginVertical: 30,\r\n    marginHorizontal: 10,\r\n  },\r\n  mainSecHeading: {\r\n    fontSize: 28,\r\n    fontWeight: '600',\r\n    color: '#93867F',\r\n  },\r\n  secContainer: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n  },\r\n  taskSec: {\r\n    width: '30%',\r\n    height: 500,\r\n    backgroundColor: '#D6D7D5',\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n  },\r\n  taskSecHeadingContainer: {\r\n    height: 60,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderBottomColor: '#93867F',\r\n    borderBottomWidth: 2,\r\n  },\r\n  taskSecHeading: {\r\n    fontSize: 24,\r\n    fontWeight: '600',\r\n    color: '#474A45',\r\n  },\r\n\r\n  // Modal styles\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n  },\r\n  modalView: {\r\n    width: 600,\r\n    height: 400,\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    position: 'relative',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: '600',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  modalTextInput: {\r\n    height: 40,\r\n    borderColor: '#474A45',\r\n    borderWidth: 1,\r\n    marginBottom: 20,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 5,\r\n  },\r\n  modalButtonContainer: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    width: '94%',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  // Task styles\r\n  taskContainer: {\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    borderBottomColor: '#474A45',\r\n    borderBottomWidth: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between', // Space between task info and delete button\r\n    alignItems: 'center', // Align items vertically centered\r\n    marginVertical: 5, // Space between tasks\r\n    backgroundColor: '#5CC8FF',\r\n  },\r\n  deleteButton: {\r\n    marginLeft: 10, // Optional: add space between task info and delete button\r\n  },\r\n  taskInfo: {\r\n    flex: 1, // Allow the task info to take remaining space\r\n  },\r\n  taskName: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: 'black',\r\n  },\r\n  dueDate: {\r\n    fontSize: 10,\r\n    fontWeight: '600',\r\n    color: '#474A45',\r\n  },\r\n  dueDateLabel: {\r\n    fontSize: 12,\r\n    fontWeight: '600',\r\n    color: '#474A45',\r\n  },\r\n\r\n  taskListContainer: {\r\n    padding: 10,\r\n  },\r\n  modalLabel: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    marginBottom: 5,\r\n  },\r\n\r\n  // Notification badge styles\r\n  notificationBadge: {\r\n    position: 'absolute',\r\n    right: 10,\r\n    backgroundColor: 'red',\r\n    borderRadius: 10,\r\n    width: 20,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  badgeText: {\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  // View Modal Styles\r\n  modalBackground: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  viewModalContainer: {\r\n    width: '40%',\r\n    padding: 20,\r\n    backgroundColor: '#FFF',\r\n    borderRadius: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {width: 0, height: 2},\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  viewModalTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#5CC8FF',\r\n  },\r\n  modalText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  viewModalLabel: {\r\n    fontWeight: 'bold',\r\n  },\r\n  viewCloseButton: {\r\n    marginTop: 20,\r\n    backgroundColor: '#474A45',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  closeButtonText: {\r\n    color: '#5CC8FF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  emptyMessageContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 20, // Adjust the spacing if needed\r\n  },\r\n  emptyMessageText: {\r\n    fontSize: 18,\r\n    color: '#474A45',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}